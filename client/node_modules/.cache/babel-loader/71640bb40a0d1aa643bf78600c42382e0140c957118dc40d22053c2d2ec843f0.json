{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Add(){const[message,setMessage]=useState({});const[response,setResponse]=useState('');const navigate=useNavigate();const handleInputChange=e=>{setMessage({...message,[e.target.name]:e.target.value});};const handleSubmit=async()=>{try{console.log('Sending message:',message);// Debugging log\nconst res=await fetch('/server/add',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message})});console.log('Response status:',res.status);// Debugging log\nif(!res.ok){throw new Error(\"Server responded with status \".concat(res.status));}const data=await res.json();console.log('Response data:',data);// Debugging log\nsetResponse(data.response);// Redirect after successful submission\nnavigate('/');}catch(error){console.error('Error sending message:',error);setResponse('Error sending message');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"messageField\",placeholder:\"Enter your message\",onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Send\"}),response&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Response: \",response]})]});}export default Add;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Add","message","setMessage","response","setResponse","navigate","handleInputChange","e","target","name","value","handleSubmit","console","log","res","fetch","method","headers","body","JSON","stringify","status","ok","Error","concat","data","json","error","children","type","placeholder","onChange","onClick"],"sources":["/home/yulai/projects/reactjs/gallery/client/src/sites/Add.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Add() {\n    const [message, setMessage] = useState<Record<string, any>>({});\n    const [response, setResponse] = useState<string>('');  \n    const navigate = useNavigate();\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setMessage({ ...message, [e.target.name]: e.target.value });\n    };\n    \n    const handleSubmit = async () => {\n        try {\n          console.log('Sending message:', message); // Debugging log\n          const res = await fetch('/server/add', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ message }),\n          });\n\n          console.log('Response status:', res.status); // Debugging log\n          if (!res.ok) {\n            throw new Error(`Server responded with status ${res.status}`);\n          }\n\n          const data = await res.json();\n          console.log('Response data:', data); // Debugging log\n          setResponse(data.response);\n\n          // Redirect after successful submission\n          navigate('/');\n        } catch (error) {\n          console.error('Error sending message:', error);\n          setResponse('Error sending message');\n        }\n    };\n\n    return (\n        <>\n            <input \n                type=\"text\" \n                name=\"messageField\" \n                placeholder=\"Enter your message\" \n                onChange={handleInputChange} \n            />\n            <button onClick={handleSubmit}>Send</button>\n            {response && <p>Response: {response}</p>}\n        </>\n    );\n}\n\nexport default Add;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAsB,CAAC,CAAC,CAAC,CAC/D,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAS,EAAE,CAAC,CACpD,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,iBAAiB,CAAIC,CAAsC,EAAK,CAClEL,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEZ,OAAO,CAAC,CAAE;AAC1C,KAAM,CAAAa,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,aAAa,CAAE,CACrCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEnB,OAAQ,CAAC,CAClC,CAAC,CAAC,CAEFW,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,GAAG,CAACO,MAAM,CAAC,CAAE;AAC7C,GAAI,CAACP,GAAG,CAACQ,EAAE,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,iCAAAC,MAAA,CAAiCV,GAAG,CAACO,MAAM,CAAE,CAAC,CAC/D,CAEA,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAX,GAAG,CAACY,IAAI,CAAC,CAAC,CAC7Bd,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEY,IAAI,CAAC,CAAE;AACrCrB,WAAW,CAACqB,IAAI,CAACtB,QAAQ,CAAC,CAE1B;AACAE,QAAQ,CAAC,GAAG,CAAC,CACf,CAAE,MAAOsB,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CvB,WAAW,CAAC,uBAAuB,CAAC,CACtC,CACJ,CAAC,CAED,mBACIP,KAAA,CAAAE,SAAA,EAAA6B,QAAA,eACIjC,IAAA,UACIkC,IAAI,CAAC,MAAM,CACXpB,IAAI,CAAC,cAAc,CACnBqB,WAAW,CAAC,oBAAoB,CAChCC,QAAQ,CAAEzB,iBAAkB,CAC/B,CAAC,cACFX,IAAA,WAAQqC,OAAO,CAAErB,YAAa,CAAAiB,QAAA,CAAC,MAAI,CAAQ,CAAC,CAC3CzB,QAAQ,eAAIN,KAAA,MAAA+B,QAAA,EAAG,YAAU,CAACzB,QAAQ,EAAI,CAAC,EAC1C,CAAC,CAEX,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}